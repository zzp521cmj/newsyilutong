<?xml version="1.0" encoding="UTF-8"?>  
<beans xmlns="http://www.springframework.org/schema/beans"  
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"  
    xmlns:context="http://www.springframework.org/schema/context"  
    xmlns:tx="http://www.springframework.org/schema/tx"  
    xsi:schemaLocation="  
    http://www.springframework.org/schema/beans   
    http://www.springframework.org/schema/beans/spring-beans-3.0.xsd  
    http://www.springframework.org/schema/tx   
    http://www.springframework.org/schema/tx/spring-tx-3.0.xsd   
    http://www.springframework.org/schema/context
    http://www.springframework.org/schema/context/spring-context-3.0.xsd">  
      

    <!--创建jdbc数据源 -->  
    <bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource"  
        destroy-method="close">  
        <property name="driverClassName" value="${driverClassName}"></property>  
        <property name="url" value="${jdbc_url}"></property>  
        <property name="username" value="${jdbc_username}"></property>  
        <property name="password" value="${jdbc_password}"></property>
        <!-- 初始化连接大小 -->
		<property name="initialSize" value="0" />
		<!-- 连接池最大使用连接数量 -->
		<property name="maxActive" value="20" />
		<!-- 连接池最小空闲 -->
		<property name="minIdle" value="0" />
		<!-- 获取连接最大等待时间 -->
		<property name="maxWait" value="60000" />
			<!-- 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 -->
		<property name="timeBetweenEvictionRunsMillis" value="60000" />
		<!-- 配置一个连接在池中最小生存的时间，单位是毫秒 -->
		<property name="minEvictableIdleTimeMillis" value="25200000" />

		<!-- 打开removeAbandoned功能 -->
		<property name="removeAbandoned" value="true" />
		<!-- 1800秒，也就是30分钟 -->
		<property name="removeAbandonedTimeout" value="1800" />
		<!-- 关闭abanded连接时输出错误日志 -->
		<property name="logAbandoned" value="true" />
    </bean>  
  
    <!-- (事务管理)transaction manager, use JtaTransactionManager for global tx -->  
    <bean id="transactionManager"  
        class="org.springframework.jdbc.datasource.DataSourceTransactionManager">  
        <property name="dataSource" ref="dataSource" />  
    </bean>  
   
    <!-- 可通过注解控制事务 -->  
    <tx:annotation-driven />  
    <!-- 创建SqlSessionFactory，同时指定数据源 -->  
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">  
        <property name="dataSource" ref="dataSource" />
        <!-- 自动扫描model层，省去mapper.xml编写全路径 -->
    	<property name="typeAliasesPackage" value="com.jy.model" /> 
        <!-- 自动扫描mapper.xml文件,需要ongl包 -->
        <property name="mapperLocations" value="classpath*:com/jy/mapper/*.xml"></property>
    	
    </bean>  
     <!-- mapper接口扫描 -->
	 <bean id="mapperScannerConfig" class="org.mybatis.spring.mapper.MapperScannerConfigurer">  
        <property name="basePackage" value="com.jy.dao" />
    	<property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"></property>
    </bean> 
    
      <!-- <bean  class="org.mybatis.spring.mapper.MapperFactoryBean">
  		<property name="sqlSessionFactory" ref="sqlSessionFactory" />
	 	<property name="mapperInterface" value="com.jy.dao.empDao" />
 	  </bean> -->
      
</beans>  