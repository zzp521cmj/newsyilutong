<?xml version="1.0" encoding="UTF-8" ?>  
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"  
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.jy.dao.IncomeDao">


	<select id="getIncomeInfo" resultType="Income">
		SELECT
		ji.*
		FROM
		jy_total_income ji
		where
		ji.isincome=1
		<if test="param3!=null and param3!=''">
			and ji.car_id like "%${param3}%"
		</if>
		<if test="param4!=null and param4!=''">
			and ji.checkp like "%${param4}%"
		</if>
		<if test="param5!=null and param5!=''">
			and ji.start_address like "%${param5}%"
		</if>
		<if test="param6!=null and param6!=''">
			and ji.sended_time &gt;=#{param6}
		</if>
		<if test="param7!=null and param7!=''">
			and ji.sended_time &lt;=#{param7}
		</if>
		<if test="(param6!=null and param6!='') and (param7!=null and param7!='')">
			and ji.sended_time &gt;=#{param6}
			and ji.sended_time &lt;=#{param7}
		</if>
		ORDER BY
		ji.updatetime
		DESC
		limit
		#{param1},#{param2}
	</select>

	<select id="getIncome" resultType="int">
		select count(*) from jy_total_income ji  where
		ji.isincome=1
		<if test="param3!=null and param1!=''">
			and ji.car_id like "%${param1}%"
		</if>
		<if test="param4!=null and param2!=''">
			and ji.checkp like "%${param2}%"
		</if>
		<if test="param5!=null and param3!=''">
			and ji.start_address like "%${param3}%"
		</if>
		<if test="param4!=null and param4!=''">
			and sended_time &gt;=#{param4}
		</if>
		<if test="param5!=null and param5!=''">
			and sended_time &lt;=#{param5}
		</if>
		<if test="(param4!=null and param4!='')and (param5!=null and param5!='') ">
			and sended_time &gt;=#{param4}
			and sended_time &lt;=#{param5}
		</if>

	</select>

	<select id="getShipOrderInfoMake" resultType="ShippingOrder">
		SELECT
		ji.*
		FROM
		jy_shiping_order ji
		where
		ji.ismake=0
		<if test="param3!=null and param3!=''">
			and shiping_order_num like "%${param3}%"
		</if>
		ORDER BY
		ji.updatetime
		DESC
		limit
		#{param1},#{param2}
	</select>
	
	<select id="getShipOrderMake" resultType="int">
		select count(*) from jy_shiping_order where 
		ismake=0
		<if test="_parameter!=null and _parameter!=''">
			and shiping_order_num like "%${_parameter}%"
		</if>
	</select>
	
	<!-- 总汇表车牌查询 -->
	<select id="IncemCarid" resultType="Income">
		SELECT
		ji.car_id,
		ji.car_number
		FROM
		jy_total_income ji
		where 
		ji.isincome=1
		<if test="_parameter!=null and _parameter!=''">
			and ji.car_number like "%${_parameter}%"
		</if>
	</select>
	
	<!--导出 -->
	<select id="getIncomeAll" resultType="Income">
		SELECT
		ji.*
		FROM
		jy_total_income ji
		<!-- LEFT JOIN jy_travel_card jtc ON jtc.travel_card_id = ji.car_id -->
		where
		ji.isincome=1
		<if test="param1!=null and param1!=''">
			and ji.car_id like "%${param1}%"
		</if>
		<if test="param2!=null and param2!=''">
			and ji.checkp like "%${param2}%"
		</if>
		<if test="param3!=null and param3!=''">
			and ji.start_address like "%${param3}%"
		</if>
		<if test="param4!=null and param4!=''">
			and sended_time &gt;=#{param4}
		</if>
		<if test="param5!=null and param5!=''">
			and sended_time &lt;=#{param5}
		</if>
		<if test="(param4!=null and param4!='') and (param5!=null and param5!='') ">
			and sended_time &gt;=#{param4}
			and sended_time &lt;=#{param5}
		</if>
		ORDER BY
		ji.updatetime
		DESC

	</select>

	<delete id="deleteIncome" parameterType="java.util.Arrays">
		delete from
		jy_total_income
		where
		tatal_id IN
		<foreach collection="array" index="index" item="item" open="("
			separator="," close=")">
			#{item}
		</foreach>
	</delete>
	<!-- 删除修改订单状态 -->
	<update id="updateStateship" parameterType="java.util.Arrays">
		update
		jy_shiping_order
		<set>
		ismake=0
		</set>
		where
		shiping_order_id IN
		<foreach collection="array" index="index" item="item" open="("
			separator="," close=")">
			#{item}
		</foreach>
	</update>
	<update id="updateStatemake" parameterType="string">
		update
		jy_shiping_order
		<set>
		ismake=1
		</set>
		where 
		shiping_order_id =#{_parameter}	
	</update>
	<insert id="saveIncome" parameterType="Income">
		insert
		into
		jy_total_income
		(
		tatal_id,
		shiping_order_id,
		checkp,
		shiping_order_num,
		end_address,
		receipt,
		goods_name,
		goods_num,
		goods_weight,
		goods_vol,
		send_type,
		start_address,
		sended_time,
		car_number,
		trade_total,
		trade_real,
		income_time,
		sends_fee,
		change_total,
		land_total,
		income_total,
		send_pay,
		changes_pay,
		land_pay,
		pay_total,
		gain_total,
		gain_send,
		gain_change,
		gain_land,
		change_address,
		send_car,
		adorns_fee,
		remarkes,
		car_id,
		updatetime,
		pay_type,
		isincome
		)
		values (

		#{tatal_id},
		#{shiping_order_id},
		#{checkp},
		#{shiping_order_num},
		#{end_address},
		#{receipt},
		#{goods_name},
		#{goods_num},
		#{goods_weight},
		#{goods_vol},
		#{send_type},
		#{start_address},
		#{sended_time},
		#{car_number},
		#{trade_total},
		#{trade_real},
		#{income_time},
		#{sends_fee},
		#{change_total},
		#{land_total},
		#{income_total},
		#{send_pay},
		#{changes_pay},
		#{land_pay},
		#{pay_total},
		#{gain_total},
		#{gain_send},
		#{gain_change},
		#{gain_land},
		#{change_address},
		#{send_car},
		#{adorns_fee},
		#{remarkes},
		#{car_id},
		#{updatetime},
		#{pay_type},
		#{isincome}
		)

	</insert>

	<select id="getUpdateIncome" parameterType="String"
		resultType="Income">
		<!-- select * from jy_car_owner_info where car_owner_id=#{carOwnerId} -->
		SELECT
		ji.*
		FROM
		jy_total_income ji
		where
		ji.tatal_id=#{tatal_id}
	</select>
	<select id="getShipOrderCAM" parameterType="java.util.Arrays" resultType="ShippingOrder">
		select * from
		jy_shiping_order
		where
		shiping_order_id IN
		<foreach collection="array" index="index" item="item" open="("
			separator="," close=")">
			#{item}
		</foreach>
		ORDER BY
		updatetime
		DESC
		LIMIT
		#{param1},#{param2}
	</select>
	<update id="updateIncome" parameterType="Income">
		update
		jy_total_income

		<set>
			tatal_id=#{tatal_id},
			shiping_order_id=#{shiping_order_id},
			checkp=#{checkp},
			shiping_order_num=#{shiping_order_num},
			end_address=#{end_address},
			receipt=#{receipt},
			goods_name=#{goods_name},
			goods_num=#{goods_num},
			goods_weight=#{goods_weight},
			goods_vol=#{goods_vol},
			send_type=#{send_type},
			start_address=#{start_address},
			sended_time=#{sended_time},
			car_number=#{car_number},
			trade_total=#{trade_total},
			trade_real=#{trade_real},
			income_time=#{income_time},
			sends_fee=#{sends_fee},
			change_total=#{change_total},
			land_total=#{land_total},
			income_total=#{income_total},
			send_pay=#{send_pay},
			changes_pay=#{changes_pay},
			land_pay=#{land_pay},
			pay_total=#{pay_total},
			gain_total=#{gain_total},
			gain_send=#{gain_send},
			gain_change=#{gain_change},
			gain_land=#{gain_land},
			change_address=#{change_address},
			send_car=#{send_car},
			adorns_fee=#{adorns_fee},
			remarkes=#{remarkes},
			car_id=#{car_id},
			updatetime=#{updatetime},
			pay_type=#{pay_type},
			isincome=#{isincome},
			income_style=#{income_style}
		</set>
		where tatal_id = #{tatal_id}
	</update>
	<select id="getUpdateShipOrder" resultType="ShippingOrder">
		select
		*
		from
		jy_shiping_order
		<if test="_parameter!=null">
			where shiping_order_id like "%${_parameter}%"
		</if>
	</select>
	<!-- <select id="getPlateNumberLength" resultType="ShippingOrder"> select 
		shiping_order_id, shiping_order_num from jy_shiping_order <if test="_parameter!=null"> 
		where shiping_order_num like "%${_parameter}%" </if> </select> -->
	<select id="getPlateNumber" resultType="Income">
		<!-- SELECT
		DISTINCT travel_card_id,plate_number
		FROM
		jy_travel_card jtc
		WHERE
		travel_card_id NOT IN(
		SELECT
		DISTINCT travel_card_id
		FROM
		jy_travel_card
		jtc
		INNER JOIN
		jy_shiping_order ji ON ji.car_id=jtc.travel_card_id
		) -->
		SELECT
		DISTINCT travel_card_id,plate_number
		FROM
		jy_travel_card jtc
		where jtc.state=1
		<if test="_parameter!=null">
			and plate_number like "%${_parameter}%"
		</if>
	</select>
	<!-- 导入 -->
	<insert id="saveShipOrders" parameterType="java.util.List">
		insert into
		jy_shiping_order
		(
		shiping_order_id,
		shiping_order_num,
		start_address,
		end_address,
		check_time,
		checkp,
		check_tel,
		check_phone,
		receipt,
		receipt_tel,
		receipt_phone,
		receipt_address,
		goods_name,
		goods_packing,
		goods_num,
		goods_weight,
		goods_vol,
		car_id,
		spe,
		take_fee,
		send_fee,
		adorn_fee,
		trunk_fee,
		insurance,
		pay_type,
		transport_pay,
		remarks,
		check_type,
		send_type,
		shipping_order_state,
		change_address,
		trade_agency,
		creat_type,
		updatetime,
		shipping_order
		)
		values (
		<foreach collection="list" index="index" item="item"
			separator=",">
			#{item.shiping_order_id},
			#{item.shiping_order_num},
			#{item.start_address},
			#{item.end_address},
			#{item.check_time},
			#{item.checkp},
			#{item.check_tel},
			#{item.check_phone},
			#{item.receipt},
			#{item.receipt_tel},
			#{item.receipt_phone},
			#{item.receipt_address},
			#{item.goods_name},
			#{item.goods_packing},
			#{item.goods_num},
			#{item.goods_weight},
			#{item.goods_vol},
			#{item.car_id},
			#{item.spe},
			#{item.take_fee},
			#{item.send_fee},
			#{item.adorn_fee},
			#{item.trunk_fee},
			#{item.insurance},
			#{item.pay_type},
			#{item.transport_pay},
			#{item.remarks},
			#{item.check_type},
			#{item.send_type},
			#{item.shipping_order_state},
			#{item.change_address},
			#{item.trade_agency},
			#{item.creat_type},
			#{item.updatetime},
			#{item.shipping_order}
			)
		</foreach>
	</insert>

</mapper>
